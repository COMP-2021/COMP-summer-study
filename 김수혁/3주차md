<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>로또추첨기</title>

    <style>
        .ball{
            display: inline-block;
            border: 1px solid black;
            border-radius: 20px;
            width: 40px;
            height: 40px;
            line-height: 40px;
            font-size: 20px;
            text-align: center;
            margin-right: 20px;
        }
    </style>
</head>
<body>
    <div id = "result">추첨 결과는? </div>
    <div id = "bonus"> 보너스: </div>

    <script>
        const candidate = Array(45).fill().map((v,i)=> i+1);
        const shuffle = [];
        while(candidate.length > 0){
          const random = Math.floor(Math.random()*candidate.length);  //무작위 인덱스 뽑기
          const spliceArray = candidate.splice(random,1);   //뽑은 값은 배열에 들어있음
          const value = spliceArray[0]; //배열에 들어있는 값 꺼내기
          shuffle.push(value);  //shuffle 배열에 넣기
        }
        console.log(shuffle);

        /*
        const candidate1 = Array(45).fill().map((v,i)=>i+1);
        const shuffle1 = [];
        for(i=candidate.length;i>0;i--){
          const random1 = Math.floor(Math.random()*i);
          const spliceArray1 = candidate.splice(random,1);
          const value1 = spliceArray[0];
          shuffle1.push(value1);
        }
        */

        const winBalls = shuffle.slice(0,6).sort((a,b)=>a-b); //sort: 정렬하는 method slice는 0부터 6까지 자르는것
        const bonus = shuffle[6];
        console.log(winBalls, bonus);

        /*
        const arr = [1,3,4,6,7,8];
        arr.slice(0,3)은 0은 포함 3은 미포함
        [1,3,4]까지 표기됨
        원본에 영향을 미치지 않는다 ex)map
        arr.sort(a,b)=>{
        return a-b;           a-b는 오름차순으로 정렬, b-a는 내림차순
          문자열 사전순 정렬 localecomapre()
          }

          setTimeout(()=>{
            //내용
          },밀리초);
        */

          const $result = document.querySelector('#result');
          const $bonus = document.querySelector('#bonus');

          function colorize(number, $tag){
            if(number<10){
              $tag.style.backgroundColor = 'red';
              $tag.style.color = 'white';
            }
            else if(number<20){
              $tag.style.backgroundColor = 'orange';
            }
            else if(number<30){
              $tag.style.backgroundColor = 'yellow';
            }
            else if(number<40){
              $tag.style.backgroundColor = 'blue';
              $tag.style.color = 'white';
            }
            else{
              $tag.style.backgroundColor = 'green';
              $tag.style.color = 'white';
            }
          }

          const showBall = (number, $target) => {
            const $ball = document.createElement('div');
            $ball.className = 'ball';
            colorize(number, $ball);
            $ball.textContent = number;
            $target.appendChild($ball);
          }

          const time = 1000;

          for(let i=0;i<winBalls.length;i++){
            setTimeout(()=>{
            showBall(winBalls[i], $result);
          }, time*(i+1));
          }

          setTimeout(()=>{
            showBall(bonus, $bonus);
          }, 7000);


          /*
          함수 스코프 와 블록 스코프 var과 let의 이야기
          재현이 형이 알려준 강의에선 var를 사용하지 말라고 했음
          var : function scope
          let: block scope
          */
    </script>
</body>
</html>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>가위바위보(RSP)</title>

    <style>
        #computer{
            width: 190px;
            height: 200px;
        }
    </style>
</head>
<body>
    <div id = "computer"></div>
    <div>
      <button id="rock" class = "btn">바위</button>
      <button id="scissor" class = "btn">가위</button>
      <button id="paper" class = "btn">보</button>
    </div>
    <div id = "score">0</div>
    <script>
      const $computer = document.querySelector('#computer');
      const $score = document.querySelector('#score');
      const $rock = document.querySelector('#rock');
      const $scissor = document.querySelector('#scissor');
      const $paper = document.querySelector('#paper');
      const IMG_URL = './images.png';
      $computer.style.background = `url(${IMG_URL}) 0 0`; 
      //$computer.style.background = `url(${IMG_URL}) -210px 0`; 
      //$computer.style.background = `url(${IMG_URL}) -420px 0`; 
      $computer.style.backgroundSize = 'auto 200px';

      const rspX = {
        scissor: '0 ',
        rock: '-210px',
        paper: '-420px',
      };

      let computerChoice = 'scissor';
      const changeComputerHand = () => {
        if(computerChoice === 'scissor'){ //가위
          computerChoice = 'rock';
        }
        else if(computerChoice === 'rock'){  //바위 
          computerChoice = 'paper';  
        }
        else if(computerChoice === 'paper'){ //보
          computerChoice = 'scissor';
        }
        $computer.style.background = `url(${IMG_URL}) ${rspX[computerChoice]} 0`; 
          $computer.style.backgroundSize = 'auto 200px';
      }
      
      let IntervalID = setInterval(changeComputerHand, 50);  //50 => 0.05초

      const scoreTable = {
          rock: 0,
          scissor: 1,
          paper: -1,
      };

      let score = 0;
      const clickButton = () => {
        clearInterval(IntervalID);
        //점수 계산 및 화면 표시
       
       const myChoice = event.target.id === '바위' ? 'rock' : event.target.id === '가위' ? 'scissor' : 'paper';
        const myScore = scoreTable[myChoice];
        const computerScore = scoreTable[computerChoice];
        const diff = myScore - computerScore;

        let message;
        if(diff === 2 || diff === -1){
          score = score +1;
          message = '승리';
        }
        else if(diff === -2 || diff === 1){
          score = score - 1;
          message = '패배';
        }
        else{
          message = '무승부';
        }
        $score.textContent = `${message} 총: ${score}점`;
        setTimeout(()=>{
          clearInterval(IntervalID);
          IntervalID = setInterval(changeComputerHand, 50);
        },1000);
      };
      $rock.addEventListener('click', clickButton);
      $scissor.addEventListener('click', clickButton);
      $paper.addEventListener('click', clickButton);

      /*const clickButton = () => {
        clearInterval(IntervalID);
        //점수 계산 및 화면 표시
        $rock.removeEventListener('click', clickButton);
        $scissor.removeEventListener('click', clickButton);
        $paper.removeEventListener('click', clickButton);

        setTimeout(()=>{
          clearInterval(IntervalID);
          IntervalID = setInterval(changeComputerHand, 50);
          $rock.addEventListener('click', clickButton);
      $scissor.addEventListener('click', clickButton);
      $paper.addEventListener('click', clickButton);
        },1000);*/

        /*
        let clickable = true;
        const clickButton = () => {
        if(clickable){
          clearInterval(IntervalID);
           //점수 계산 및 화면 표시
          clickable = false;
        setTimeout(()=>{
          clickable = true;
          IntervalID = setInterval(changeComputerHand, 50);
        },1000);
      }
      };*/

    </script>

</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>반응속도</title>
    <style>
        #screen {
            width: 300px;
            height: 200px;
            text-align: center;
            user-select: none;
        }
        #screen.waiting {
            background-color: aqua;
        }
        #screen.ready {
            background-color: red;
            color: white;
        }
        #screen.now {
            background-color: greenyellow;
        }
    </style>
</head>
<body>
    <div id="screen" class="waiting">클릭해서 시작하세요</div>
    <div id="result"></div>



<script>
const $screen = document.querySelector('#screen');
const $result = document.querySelector('#result');
let startTime;
let endTime;
const records = [];
let timeoutId;
    // 화면마다 다른 class를 붙여 어떤 화면인지 알 수 있게
    $screen.addEventListener('click', function () {
        if ($screen.classList.contains('waiting')) { 
            // or use replace keyword
            $screen.classList.remove('waiting');
            $screen.classList.add('ready');
            
            $screen.textContent = '초록색이 되면 클릭하세요';
            setTimeout(function () {
                // current time
                startTime = new Date();
                $screen.classList.remove('ready');
                $screen.classList.add('now');
                $screen.textContent = '클릭하세요!';
            }, Math.floor(Math.random() * 1000) + 2000); 
            // 2000~3000 ms
        }
        else if ($screen.classList.contains('ready')) { // 준비 화면
            clearTimeout(timeoutId);
            $screen.classList.remove('ready');
            $screen.classList.add('waiting');
            $screen.textContent = '너무 성급하시군요!';
        }
        else if ($screen.classList.contains('now')) { // 클릭 화면
            endTime = new Date();
            const current = endTime - startTime;
            records.push(current);
            /*
            배열.reduce((누적값, 현잿값) => {
                return 새로운누적값;
            }, 초깃값);
            */
            const average = records.reduce((a, c) => a + c) / records.length;
            
            $result.textContent = `현재 ${current}ms, 평균: ${average}ms`;
            startTime = null;
            endTime = null;
            $screen.classList.remove('now');
            $screen.classList.add('waiting');
            $screen.textContent = '클릭해서 시작하세요';
        }
    });
</script>


</body>
</html>
